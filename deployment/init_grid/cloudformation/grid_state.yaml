---
# Copyright 2023 Amazon.com, Inc. and its affiliates. All Rights Reserved.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#                 http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.nse.

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy the necessary resources for storing the state of a grid'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: 'Tag needs to follow S3 naming rules.'
        Parameters:
          - BucketTag
Parameters:
  BucketTag:
    Description: 'Recommended to prefix the different required buckets'
    Type: String
    Default: ''
Resources:
  # KMS Key used for encrypting the buckets
  HTCStateS3Key:
    Type: AWS::KMS::Key
    Properties:
      PendingWindowInDays: 10
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
  HTCStateS3KeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/htc-state-s3
      TargetKeyId:
        Ref: HTCStateS3Key

  # S3 Bucket used for storing the image_repository TF state
  ImageTfstateHtcGrid:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub
        - '${BucketTag}-image-tfstate-htc-grid-${RANDOM}'
        - RANDOM: !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId' ]]]]
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: 'aws:kms'
            KMSMasterKeyID: !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:${HTCStateS3KeyAlias}'

  ImageTfstateHtcGridPolicy:
    DependsOn:
      - ImageTfstateHtcGrid
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ImageTfstateHtcGrid
      PolicyDocument:
        Statement:
          - Action: 's3:PutObject'
            Condition:
              'Null':
                's3:x-amz-server-side-encryption': true
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}/*'
            Sid: DenyPublishingUnencryptedResources
          - Action: 's3:PutObject'
            Condition:
              'StringNotEquals':
                's3:x-amz-server-side-encryption': 'aws:kms'
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}/*'
            Sid: DenyIncorrectEncryptionHeader
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Condition:
              Bool:
                'aws:SecureTransport': false
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}/*'
            Sid: DenyUnencryptedConnections
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Condition:
              StringEquals:
                's3:x-amz-acl':
                  - authenticated-read
                  - public-read
                  - public-read-write
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}'
              - !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}/*'
            Sid: DenyPublicReadAcl
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Condition:
              StringLike:
                's3:x-amz-grant-read':
                  - '*http://acs.amazonaws.com/groups/global/AllUsers*'
                  - '*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*'
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}'
              - !Sub 'arn:${AWS::Partition}:s3:::${ImageTfstateHtcGrid}/*'
            Sid: DenyGrantingPublicRead

  # S3 Bucket used for storing the Grid TF state
  TfstateHtcGrid:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub
        - '${BucketTag}-tfstate-htc-grid-${RANDOM}'
        - RANDOM: !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId' ]]]]
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: 'aws:kms'
            KMSMasterKeyID: !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:${HTCStateS3KeyAlias}'

  TfstateHtcGridPolicy:
    DependsOn:
      - TfstateHtcGrid
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref TfstateHtcGrid
      PolicyDocument:
        Statement:
          - Action: 's3:PutObject'
            Condition:
              'Null':
                's3:x-amz-server-side-encryption': true
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}/*'
            Sid: DenyPublishingUnencryptedResources
          - Action: 's3:PutObject'
            Condition:
              'StringNotEquals':
                's3:x-amz-server-side-encryption': 'aws:kms'
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}/*'
            Sid: DenyIncorrectEncryptionHeader
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Condition:
              Bool:
                'aws:SecureTransport': false
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}/*'
            Sid: DenyUnencryptedConnections
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Condition:
              StringEquals:
                's3:x-amz-acl':
                  - authenticated-read
                  - public-read
                  - public-read-write
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}'
              - !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}/*'
            Sid: DenyPublicReadAcl
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Condition:
              StringLike:
                's3:x-amz-grant-read':
                  - '*http://acs.amazonaws.com/groups/global/AllUsers*'
                  - '*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*'
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}'
              - !Sub 'arn:${AWS::Partition}:s3:::${TfstateHtcGrid}/*'
            Sid: DenyGrantingPublicRead

  # S3 Bucket used for storing the Lambda binaries
  LambdaUnitHtcGrid:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub
        - '${BucketTag}-lambda-unit-htc-grid-${RANDOM}'
        - RANDOM: !Select [0, !Split ['-', !Select [2, !Split ['/', !Ref 'AWS::StackId' ]]]]
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: 'aws:kms'
            KMSMasterKeyID: !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:${HTCStateS3KeyAlias}'

  LambdaUnitHtcGridPolicy:
    DependsOn:
      - LambdaUnitHtcGrid
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref LambdaUnitHtcGrid
      PolicyDocument:
        Statement:
          - Action: 's3:PutObject'
            Condition:
              'Null':
                's3:x-amz-server-side-encryption': true
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}/*'
            Sid: DenyPublishingUnencryptedResources
          - Action: 's3:PutObject'
            Condition:
              'StringNotEquals':
                's3:x-amz-server-side-encryption': 'aws:kms'
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}/*'
            Sid: DenyIncorrectEncryptionHeader
          - Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Condition:
              Bool:
                'aws:SecureTransport': false
            Effect: Deny
            Principal: '*'
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}/*'
            Sid: DenyUnencryptedConnections
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Condition:
              StringEquals:
                's3:x-amz-acl':
                  - authenticated-read
                  - public-read
                  - public-read-write
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}'
              - !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}/*'
            Sid: DenyPublicReadAcl
          - Action:
              - 's3:PutBucketAcl'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Condition:
              StringLike:
                's3:x-amz-grant-read':
                  - '*http://acs.amazonaws.com/groups/global/AllUsers*'
                  - '*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*'
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}'
              - !Sub 'arn:${AWS::Partition}:s3:::${LambdaUnitHtcGrid}/*'
            Sid: DenyGrantingPublicRead

Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  ImageTfstateHtcGridBucketId:
    Description: 'S3 bucket name of image tfstate htc-grid'
    Value: !Ref ImageTfstateHtcGrid
  TfstateHtcGridBucketId:
    Description: 'S3 bucket name of tfstate htc-grid'
    Value: !Ref TfstateHtcGrid
  LambdaUnitHtcGridBucketId:
    Description: 'S3 bucket name of lambda unit htc-grid'
    Value: !Ref LambdaUnitHtcGrid
  HTCStateS3KeyAlias:
    Description: 'KMS Key Alias used to encrypt the HTC State S3 Buckets'
    Value: !Sub 'arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:${HTCStateS3KeyAlias}'